print(a)
print(a+b)
prices[a] <- NA
prices[a+b] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
a <- which.min(prices)
if((a+1) < length(prices))
{
b <- which.max(prices[(a+1):length(prices)])
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
}
else {
if(na.omit(prices)<2){
break
}
}
print(a)
print(a+b)
prices[a+b] <- NA
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
a <- which.min(prices)
if((a+1) < length(prices))
{
b <- which.max(prices[(a+1):length(prices)])
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
}
else {
if(length(na.omit(prices))<2){
break
}
}
print(a)
print(a+b)
prices[a+b] <- NA
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
a <- which.min(prices)
if((a+1) < length(prices))
{
print(a)
print(a+b)
b <- which.max(prices[(a+1):length(prices)])
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
}
else {
if(length(na.omit(prices))<2){
break
}
}
prices[a+b] <- NA
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
a <- which.min(prices)
if((a+1) < length(prices))
{
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(a+b)
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
}
else {
if(length(na.omit(prices))<2){
break
}
}
prices[a+b] <- NA
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
a <- which.min(prices)
if((a+1) < length(prices) && length(na.omit(prices[(a+1):length(prices)]))>0)
{
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(a+b)
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
}
else {
if(length(na.omit(prices))<2){
break
}
}
prices[a+b] <- NA
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
a <- which.min(prices)
if((a+1) < length(prices))
{
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(a+b)
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
}
else {
if(length(na.omit(prices))<2){
break
}
}
}
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
a <- which.min(prices)
if((a+1) < length(prices))
{
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(a+b)
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
}
else {
if(length(na.omit(prices))<2){
break
}
}
}
}
prices[a+b] <- NA
}
prices
temp
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
a <- which.min(prices)
if((a+1) < length(prices))
{
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(a+b)
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
else {
if(length(na.omit(prices))<2){
break
}
}
}
}
prices[a] <- NA
}
prices[c(1,0,1)]
prices <- dat [,2]
prices[c(1,0,1)]
prices[c(1,0,-1)]
prices[abs(c(1,0,-1))]
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices)<2){
break
}
a <- which.min(prices)
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
# print(a)
# print(a+b)
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices)<2){
break
}
a <- which.min(prices)
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
# print(a)
# print(a+b)
# if(length(na.omit(prices))>1 ){
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices)<2){
break
}
a <- which.min(prices)
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
if(prices[a]<prices[a+b] ){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
a <- which.min(prices)
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
a <- which.min(prices)
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
# print(a)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
a <- which.min(prices)
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
a <- which.min(prices)
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
a <- which.min(prices)
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
prices[a] <- NA
}
prices
temp
sum(temp)
sum(dat[,2]*temp)
sum(dat[,2]*temp)
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
a <- which.min(prices)
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(b)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
a <- which.min(prices)
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(a+b)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
a <- which.min(prices)
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(b)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
prices[a] <- NA
}
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
a <- which.min(prices)
if((a+1) < length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(a+b)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
prices[a] <- NA
}
temp
prices
temp <- rep(0,101)
prices <- dat [,2]
while(TRUE)
{
if(length(na.omit(prices))<2){
break
}
a <- which.min(prices)
if((a+1) <= length(prices)){
if( length(na.omit(prices[(a+1):length(prices)]))>0){
b <- which.max(prices[(a+1):length(prices)])
print(a)
print(a+b)
if(prices[a] < prices[a+b]){
temp[a] <- -1
temp[a+b] <- 1
prices[a+b] <- NA
}
}
}
prices[a] <- NA
}
prices
temp
sum(temp)
sum(dat[,2]*temp)
prices <- dat [,2]
prices[abs(temp)]
prices <- dat [,2]
prices
temp
prices[abs(temp)]
prices
abs(temp)
prices[c(abs(temp))]
abs(temp)-1
abs(abs(temp)-1)
prices*abs(abs(temp)-1)
dat = read.csv("ASSESS-61.csv", header = FALSE, strip.white=TRUE)
install.packages("xlsx")
order(result.data,result.data[,3])
result.data[order(result.data[,3]),]
#Вычисляем лучшую стратегию для пятничных цен закрытия для разных стран
rm(list=ls())
library(XLConnect)
library(xlsx)
setwd("/home/nazarov/02-fmlab.hse.ru/05 - reverse/")
source("R/reality_func2.R")
price_d5<- readWorksheet(loadWorkbook("data/stocks_russia.xlsx"),sheet=1)
library(XLConnect)
price_d5<- readWorksheet(loadWorkbook("data/stocks_russia.xlsx"),sheet=1)
