####################################################################################################################################################
#############################################################REALITY_CHECK - SHARP##################################################################
f_sharp <- mean(temp)/sd(temp)
if(m==1){
V_bar_sharp <- sqrt(n)*f_sharp
for (k in 1:N_rc){
#     V_star[k] <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
V_star_sharp[k] <- sqrt(n)*(mean(temp[P_R_ind[,k]])/sd(temp[P_R_ind[,k]]) - f_sharp)
}
}
else {
V_bar_sharp <- max(sqrt(n)* f_sharp ,V_bar_sharp)
for (k in 1:N_rc){
#      t <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
t <- sqrt(n)*(mean(temp[P_R_ind[,k]])/sd(temp[P_R_ind[,k]]) - f_sharp)
V_star_sharp[k] <-max(t,V_star_sharp[k])
}
}
retBoot.sharp <- c(V_star_sharp,V_bar_sharp)
realityCheckData[m, "pBoot-Sharp"] <- 1-(rank(retBoot.sharp, ties.method = "first")[501]-1)/500
#  list(V_bar,V_star)
####################################################################################################################################################
m <- m+1
}
}
}
}
head( realityCheckData[order(- realityCheckData[,1]) ,],10)
head( realityCheckData[order(- realityCheckData[,2]) ,],10)
stuff <- list(data=realityCheckData, num=N, V_bar=V_bar,V_star=V_star, V_bar_sharp=V_bar_sharp,V_star_sharp=V_star_sharp)  # список ценных объектов
saveRDS(file = "tz_29_v3_with_sharp(Q=0.1).RDS",stuff) # сохраняем всё ценное в файл
realityCheckData[realityCheckData[,6]=4,1]
realityCheckData[realityCheckData[,6]==4,1]
invest.per<-c()
for (k in 1:UP1 ){
i<-k*4
aggr.winner<-mean(realityCheckData[realityCheckData[,8]==i,1])
aggr.loser<-mean(realityCheckData[realityCheckData[,9]==i,1])
invest.per<-c(ivest.per,k)
}
data.plot2 <- data.frame(invest.per=invest.per,aggr.winner=aggr.winner,aggr.loser=aggr.loser,delta=aggr.winner-aggr.loser)
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
#  scale_x_date(labels = date_format("%d/%m/%y"),breaks = date_breaks("1 week"))  +
labs(title ="Доходности победителей и mmvb для лучшей стратегии", x = "Даты", y = "Среднемесячная доходность" ) +
scale_y_continuous()+   geom_vline(xintercept= as.numeric(c(as.Date("2013-01-01"),as.Date("2014-01-01")) ), linetype=6, colour="black",size=2 )
library(ggplot2)
invest.per<-c()
for (k in 1:UP1 ){
i<-k*4
aggr.winner<-mean(realityCheckData[realityCheckData[,8]==i,1])
aggr.loser<-mean(realityCheckData[realityCheckData[,9]==i,1])
invest.per<-c(ivest.per,k)
}
data.plot2 <- data.frame(invest.per=invest.per,aggr.winner=aggr.winner,aggr.loser=aggr.loser,delta=aggr.winner-aggr.loser)
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
#  scale_x_date(labels = date_format("%d/%m/%y"),breaks = date_breaks("1 week"))  +
labs(title ="Доходности победителей и mmvb для лучшей стратегии", x = "Даты", y = "Среднемесячная доходность" ) +
scale_y_continuous()+   geom_vline(xintercept= as.numeric(c(as.Date("2013-01-01"),as.Date("2014-01-01")) ), linetype=6, colour="black",size=2 )
data.plot2 <- data.frame(invest.per=invest.per,aggr.winner=aggr.winner,aggr.loser=aggr.loser,delta=aggr.winner-aggr.loser)
invest.per<-c()
aggr.winner<-c()
aggr.loser<-c()
for (k in 1:UP1 ){
i<-k*4
aggr.winner<-c(aggr.winner,mean(realityCheckData[realityCheckData[,8]==i,1]))
aggr.loser<-c(aggr.loser,mean(realityCheckData[realityCheckData[,9]==i,1]))
invest.per<-c(ivest.per,k)
}
invest.per<-c(1)
aggr.winner<-c(1)
aggr.loser<-c(1)
for (k in 1:UP1 ){
i<-k*4
aggr.winner<-c(aggr.winner,mean(realityCheckData[realityCheckData[,8]==i,1]))
aggr.loser<-c(aggr.loser,mean(realityCheckData[realityCheckData[,9]==i,1]))
invest.per<-c(ivest.per,k)
}
View(realityCheckData)
invest.per<-c()
aggr.winner<-c()
aggr.loser<-c()
for (k in 1:UP1 ){
i<-k*4
aggr.winner<-c(aggr.winner,mean(realityCheckData[realityCheckData[,6]==i,8]))
aggr.loser<-c(aggr.loser,mean(realityCheckData[realityCheckData[,6]==i,9]))
invest.per<-c(ivest.per,k)
}
invest.per<-c(1)
aggr.winner<-c(1)
aggr.loser<-c(1)
for (k in 1:UP1 ){
i<-k*4
aggr.winner<-c(aggr.winner, mean(realityCheckData[realityCheckData[,6]==i,8]))
aggr.loser<-c(aggr.loser, mean(realityCheckData[realityCheckData[,6]==i,9]))
invest.per<-c(ivest.per,k)
}
invest.per<-c(1)
aggr.winner<-c(1)
aggr.loser<-c(1)
for (k in 1:UP1 ){
i<-k*4
aggr.winner<-c(aggr.winner, mean(realityCheckData[realityCheckData[,6]==i,8]))
aggr.loser<-c(aggr.loser, mean(realityCheckData[realityCheckData[,6]==i,9]))
invest.per<-c(invest.per,k)
}
invest.per<-c()
aggr.winner<-c()
aggr.loser<-c()
for (k in 1:UP1 ){
i<-k*4
aggr.winner<-c(aggr.winner, mean(realityCheckData[realityCheckData[,6]==i,8]))
aggr.loser<-c(aggr.loser, mean(realityCheckData[realityCheckData[,6]==i,9]))
invest.per<-c(invest.per,k)
}
data.plot2 <- data.frame(invest.per=invest.per,aggr.winner=aggr.winner,aggr.loser=aggr.loser,delta=aggr.winner-aggr.loser)
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
#  scale_x_date(labels = date_format("%d/%m/%y"),breaks = date_breaks("1 week"))  +
labs(title ="Доходности победителей и mmvb для лучшей стратегии", x = "Даты", y = "Среднемесячная доходность" ) +
scale_y_continuous()+   geom_vline(xintercept= as.numeric(c(as.Date("2013-01-01"),as.Date("2014-01-01")) ), linetype=6, colour="black",size=2 )
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
#  scale_x_date(labels = date_format("%d/%m/%y"),breaks = date_breaks("1 week"))  +
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
#  scale_x_date(labels = date_format("%d/%m/%y"),breaks = date_breaks("1 week"))  +
labs(title ="Доходности победителей и mmvb для лучшей стратегии", x = "Даты", y = "Среднемесячная доходность" )
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" ) +
scale_x_date(labels = invest.per,breaks = 1)
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" ) +
scale_x_date(labels = invest.per,breaks = invest.per)
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" )
ggplot(data.plot2, aes(invest.per))  + geom_point()
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" )
ggplot(data.plot2, aes(invest.per))  + geom_point()+
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" )
ggplot(data.plot2, aes(invest.per))  + geom_point(aggr.winner)+
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" )
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" ) +
scale_x_date(labels = invest.per,breaks = c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 60, hjust =1,size=17, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" ) +
scale_x_continuous(labels = invest.per,breaks = c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 0, hjust =1,size=37, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" ) +
scale_x_continuous(labels = invest.per,breaks = c(1,2,3,4,5,6,7,8,9,10,11,12))
ggplot(data.plot2, aes(invest.per))  +
geom_line(aes(y = aggr.winner, colour = "aggr winner"),size=2) +
geom_line(aes(y = aggr.loser, colour = "aggr loser"),size=2)+ theme(axis.text.x = element_text(angle = 0, hjust =1,size=27, face="bold"),
axis.text.y = element_text(size=25,face="bold") ,axis.title=element_text(size=25,face="bold"),plot.title = element_text(color="blue", size=34, face="bold"))+
labs(title ="Средние доходности по всем стратегиям для побед и проигр", x = "Инвестиционный период в месяцах", y = "Среднемесячная доходность" ) +
scale_x_continuous(labels = invest.per,breaks = c(1,2,3,4,5,6,7,8,9,10,11,12))
###########################################################################################
#1) Первая часть — очистка рабочего пространства, задание раб директории
setwd("/home/nazarov/Рабочий стол/fmlab.hse.ru/ТЗ до 29.07.2015/v3/")
#setwd("J:/12 - ЛАФР/02 - Декомпозиция")
#clear working environment
rm(list=ls())
source("reality_func.R")
###########################################################################################
#4) Четвертая часть -  reality check с разбивкой на процентили (50%, 30%, 20%, 10%)
library(XLConnect)
# Загружаем ранее сохраненные цены закрытия
resultDataFull<- readWorksheet(loadWorkbook("stocks_32.xlsx"),sheet=1)
row.names(resultDataFull) <- resultDataFull[,1]
resultDataFull <-resultDataFull[,-1]
# перебор от 1 до 12 мес , ждем от 0 до 8 недель, держим от 1 до 12 мес
# таким образом  последние 25 месяцев понадобятся только для одной модели
# Шаг для подсчета разниц в группах победителей и проигравших
STEP=1
# Периоды отбора (в месяцах), удержания (в неделях), инвестирования (в месяцах)
UP1=12
UP2=8
UP3=12
#UP1=2
#UP2=2
#UP3=2
# N - с учетом отступа
N <- (nrow(resultDataFull)-(2+UP3*4))%/%STEP
#N 227
########################Константы для reality check
R <- 1
#
#temp <- ret(4, 1, 4, STEP, N, resultDataFull[,-1], UP1, UP2, 0.3)
#T <- 164
T <- 74
N_rc <- 500
Q <- 0.1
#n <- T-R+1
set.seed(42)
P_R_ind <- data.frame(P_R(R,T,Q))
for (i in 2:N_rc){
P_R_ind[,i]  <-  P_R(R,T,Q)
}
V_star <- c()
f_bar  <- c()
V_star_sharp <- c()
f_sharp  <- c()
########################
m <- 1
realityCheckData <- data.frame(1,1,1,1,1,1,1,1,1)
colnames(realityCheckData) <-c("mean","t","p-value","hist_per","moment_per","invest_per","percent","winners","losers")
for (percent in c(0.5,0.3,0.2,0.1) ){
for (p1 in 1:UP1 ){
for (p2 in 0:UP2 ){
for (p3 in 1:UP3 ){
#вектор дельт
temp <- ret(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent)
return.winner<- ret.winner(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent)
return.loser<- ret.loser(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent)
n <- length(temp)
realityCheckData[m, ] <- list(mean(temp),abs(mean(temp))/sd(temp)*sqrt(n), (1-pt(q = abs(mean(temp))/sd(temp)*sqrt(n),df = n-1))*2 ,p1*4, p2, p3*4, percent,
mean(return.winner), mean(return.loser))
cat(mean(temp),abs(mean(temp))/sd(temp)*sqrt(n), (1-pt(q = abs(mean(temp))/sd(temp)*sqrt(n),df = n-1))*2 ,p1*4, p2, p3*4, n, percent, mean(return.winner), mean(return.loser), "\n")
#############################################################REALITY_CHECK##########################################################################
temp <- temp-0.06/12
f_bar <- mean(temp)
if(m==1){
V_bar <- sqrt(n)*mean(temp)
for (k in 1:N_rc){
V_star[k] <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
}
}
else {
V_bar <- max(sqrt(n)*f_bar,V_bar)
for (k in 1:N_rc){
t <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
V_star[k] <-max(t,V_star[k])
}
}
retBoot <- c(V_star,V_bar)
realityCheckData[m, "pBoot"] <- 1-(rank(retBoot, ties.method = "first")[501]-1)/500
#  list(V_bar,V_star)
####################################################################################################################################################
#############################################################REALITY_CHECK - SHARP##################################################################
f_sharp <- mean(temp)/sd(temp)
if(m==1){
V_bar_sharp <- sqrt(n)*f_sharp
for (k in 1:N_rc){
#     V_star[k] <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
V_star_sharp[k] <- sqrt(n)*(mean(temp[P_R_ind[,k]])/sd(temp[P_R_ind[,k]]) - f_sharp)
}
}
else {
V_bar_sharp <- max(sqrt(n)* f_sharp ,V_bar_sharp)
for (k in 1:N_rc){
#      t <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
t <- sqrt(n)*(mean(temp[P_R_ind[,k]])/sd(temp[P_R_ind[,k]]) - f_sharp)
V_star_sharp[k] <-max(t,V_star_sharp[k])
}
}
retBoot.sharp <- c(V_star_sharp,V_bar_sharp)
realityCheckData[m, "pBoot-Sharp"] <- 1-(rank(retBoot.sharp, ties.method = "first")[501]-1)/500
#  list(V_bar,V_star)
####################################################################################################################################################
m <- m+1
}
}
}
}
stuff <- list(data=realityCheckData, num=N, V_bar=V_bar,V_star=V_star, V_bar_sharp=V_bar_sharp,V_star_sharp=V_star_sharp)  # список ценных объектов
saveRDS(file = "tz_29_v3_with_sharp(Q=0.1)_32_stocks.RDS",stuff) # сохраняем всё ценное в файл
ret.loser (10,6,7, STEP, N, d, UP1, UP2, 0.3)
ret.winner (10,6,7, STEP, N, d, UP1, UP2, 0.3)
ret(10,6,7, STEP, N, d, UP1, UP2, 0.3)
ret.loser (10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)
ret.winner (10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)
ret(10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)
ret.winner (10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)-
ret.loser (10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)-
ret(10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)
ret.winner (10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)-
ret.loser (10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)
ret(10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3)
mean(ret(10,6,7, STEP, N, realityCheckData, UP1, UP2, 0.3))
View(realityCheckData)
ret.winner (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)-
ret.loser (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)
ret.winner (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)-
ret.loser (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)-
mean(ret(10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3))
ret.winner (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)-
ret.loser (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)-
ret(10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)
mean(ret(10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3))
ret.winner (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)-
ret.loser (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)-
ret.winner (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)-
ret.loser (10,6,7, STEP, N, resultDataFull, UP1, UP2, 0.3)
###########################################################################################
#1) Первая часть — очистка рабочего пространства, задание раб директории
setwd("/home/nazarov/Рабочий стол/fmlab.hse.ru/ТЗ до 29.07.2015/")
#setwd("J:/12 - ЛАФР/02 - Декомпозиция")
#clear working environment
rm(list=ls())
source("reality_func.R")
###########################################################################################
#4) Четвертая часть -  reality check с разбивкой на процентили (50%, 30%, 20%, 10%)
library(XLConnect)
# Загружаем ранее сохраненные цены закрытия
resultDataFull<- readWorksheet(loadWorkbook("stocks_52.xlsx"),sheet=1)
mmvb.table <- read.csv("Индекс_ММВБ.txt", header=T, dec=".",sep=",")
mmvb<-mmvb.table[,8]
rownames(mmvb)<-resultDataFull[,1]
row.names(resultDataFull) <- resultDataFull[,1]
resultDataFull <-resultDataFull[,-1]
# перебор от 1 до 12 мес , ждем от 0 до 8 недель, держим от 1 до 12 мес
# таким образом  последние 25 месяцев понадобятся только для одной модели
# Шаг для подсчета разниц в группах победителей и проигравших
STEP=1
# Периоды отбора (в месяцах), удержания (в неделях), инвестирования (в месяцах)
UP1=12
UP2=8
UP3=12
#UP1=2
#UP2=2
#UP3=2
# N - с учетом отступа
N <- (nrow(resultDataFull)-(2+UP3*4))%/%STEP
#N 227
########################Константы для reality check
R <- 1
#
#temp <- ret(4, 1, 4, STEP, N, resultDataFull[,-1], UP1, UP2, 0.3)
#T <- 164
T <- 74
N_rc <- 500
Q <- 0.1
#n <- T-R+1
set.seed(42)
P_R_ind <- data.frame(P_R(R,T,Q))
for (i in 2:N_rc){
P_R_ind[,i]  <-  P_R(R,T,Q)
}
V_star <- c()
f_bar  <- c()
########################
m <- 1
realityCheckData <- data.frame(1,1,1,1,1,1,1,1,1)
colnames(realityCheckData) <-c("mean","t","p-value","hist_per","moment_per","invest_per","percent","winners","mmvb")
for (percent in c(0.5,0.3,0.2,0.1) ){
for (p1 in 1:UP1 ){
for (p2 in 0:UP2 ){
for (p3 in 1:UP3 ){
#вектор дельт
temp <- ret.winner(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent) - ret.mmvb(p1, p2, p3, STEP, N, mmvb, UP1, UP2)
n <- length(temp)
realityCheckData[m, ] <- list(mean(temp),abs(mean(temp))/sd(temp)*sqrt(n), (1-pt(q = abs(mean(temp))/sd(temp)*sqrt(n),df = n-1))*2 ,p1*4, p2, p3*4, percent,
mean(ret.winner(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent)), mean(ret.mmvb(p1, p2, p3, STEP, N, mmvb, UP1, UP2)))
cat(mean(temp),abs(mean(temp))/sd(temp)*sqrt(n), (1-pt(q = abs(mean(temp))/sd(temp)*sqrt(n),df = n-1))*2 ,p1*4, p2, p3*4, n, percent,
mean(ret.winner(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent)),mean(ret.mmvb(p1, p2, p3, STEP, N, mmvb, UP1, UP2)),"\n")
#############################################################REALITY_CHECK##########################################################################
temp <- temp-0.06/12
f_bar <- mean(temp)
if(m==1){
V_bar <- sqrt(n)*mean(temp)
for (k in 1:N_rc){
V_star[k] <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
}
}
else {
V_bar <- max(sqrt(n)*f_bar,V_bar)
for (k in 1:N_rc){
t <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
V_star[k] <-max(t,V_star[k])
}
}
retBoot <- c(V_star,V_bar)
realityCheckData[m, "pBoot"] <- 1-(rank(retBoot, ties.method = "first")[501]-1)/500
#  list(V_bar,V_star)
####################################################################################################################################################
m <- m+1
}
}
}
}
###########################################################################################
#1) Первая часть — очистка рабочего пространства, задание раб директории
setwd("/home/nazarov/Рабочий стол/fmlab.hse.ru/ТЗ до 29.07.2015/v3")
#setwd("J:/12 - ЛАФР/02 - Декомпозиция")
#clear working environment
rm(list=ls())
source("reality_func.R")
###########################################################################################
#4) Четвертая часть -  reality check с разбивкой на процентили (50%, 30%, 20%, 10%)
library(XLConnect)
# Загружаем ранее сохраненные цены закрытия
resultDataFull<- readWorksheet(loadWorkbook("stocks_52.xlsx"),sheet=1)
mmvb.table <- read.csv("Индекс_ММВБ.txt", header=T, dec=".",sep=",")
mmvb<-mmvb.table[,8]
rownames(mmvb)<-resultDataFull[,1]
row.names(resultDataFull) <- resultDataFull[,1]
resultDataFull <-resultDataFull[,-1]
# перебор от 1 до 12 мес , ждем от 0 до 8 недель, держим от 1 до 12 мес
# таким образом  последние 25 месяцев понадобятся только для одной модели
# Шаг для подсчета разниц в группах победителей и проигравших
STEP=1
# Периоды отбора (в месяцах), удержания (в неделях), инвестирования (в месяцах)
UP1=12
UP2=8
UP3=12
#UP1=2
#UP2=2
#UP3=2
# N - с учетом отступа
N <- (nrow(resultDataFull)-(2+UP3*4))%/%STEP
#N 227
########################Константы для reality check
R <- 1
#
#temp <- ret(4, 1, 4, STEP, N, resultDataFull[,-1], UP1, UP2, 0.3)
#T <- 164
T <- 74
N_rc <- 500
Q <- 0.1
#n <- T-R+1
set.seed(42)
P_R_ind <- data.frame(P_R(R,T,Q))
for (i in 2:N_rc){
P_R_ind[,i]  <-  P_R(R,T,Q)
}
V_star <- c()
f_bar  <- c()
########################
m <- 1
realityCheckData <- data.frame(1,1,1,1,1,1,1,1,1)
colnames(realityCheckData) <-c("mean","t","p-value","hist_per","moment_per","invest_per","percent","winners","mmvb")
for (percent in c(0.5,0.3,0.2,0.1) ){
for (p1 in 1:UP1 ){
for (p2 in 0:UP2 ){
for (p3 in 1:UP3 ){
#вектор дельт
temp <- ret.winner(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent) - ret.mmvb(p1, p2, p3, STEP, N, mmvb, UP1, UP2)
n <- length(temp)
realityCheckData[m, ] <- list(mean(temp),abs(mean(temp))/sd(temp)*sqrt(n), (1-pt(q = abs(mean(temp))/sd(temp)*sqrt(n),df = n-1))*2 ,p1*4, p2, p3*4, percent,
mean(ret.winner(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent)), mean(ret.mmvb(p1, p2, p3, STEP, N, mmvb, UP1, UP2)))
cat(mean(temp),abs(mean(temp))/sd(temp)*sqrt(n), (1-pt(q = abs(mean(temp))/sd(temp)*sqrt(n),df = n-1))*2 ,p1*4, p2, p3*4, n, percent,
mean(ret.winner(p1, p2, p3, STEP, N, resultDataFull, UP1, UP2, percent)),mean(ret.mmvb(p1, p2, p3, STEP, N, mmvb, UP1, UP2)),"\n")
#############################################################REALITY_CHECK##########################################################################
temp <- temp-0.06/12
f_bar <- mean(temp)
if(m==1){
V_bar <- sqrt(n)*mean(temp)
for (k in 1:N_rc){
V_star[k] <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
}
}
else {
V_bar <- max(sqrt(n)*f_bar,V_bar)
for (k in 1:N_rc){
t <- sqrt(n)*(mean(temp[P_R_ind[,k]]) - f_bar)
V_star[k] <-max(t,V_star[k])
}
}
retBoot <- c(V_star,V_bar)
realityCheckData[m, "pBoot"] <- 1-(rank(retBoot, ties.method = "first")[501]-1)/500
#  list(V_bar,V_star)
####################################################################################################################################################
m <- m+1
}
}
}
}
stuff <- list(data=realityCheckData, num=N, V_bar=V_bar,V_star=V_star)  # список ценных объектов
saveRDS(file = "tz_29_v1(Q=0.1) mmvb_v3.RDS",stuff) # сохраняем всё ценное в файл
